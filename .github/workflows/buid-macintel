name: Build macOS app

on:
  workflow_dispatch:
    inputs:
      app_file:
        description: "Entry point (ex: main.py sau main1.py)"
        required: true
        default: "main1.py"
  push:
    branches: [ main ]

jobs:
  build-macos:
    # Alege runnerul după arhitectura de care ai nevoie:
    #  - macos-14 = Apple Silicon (ARM64)
    #  - macos-13 = Intel (x86_64)
    runs-on: macos-14

    env:
      APP_NAME: CSVExporterPro
      APP_FILE: ${{ github.event.inputs.app_file || 'main1.py' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          pwd
          ls -la
          echo "Using entry file: $APP_FILE"

      - name: Ensure entry file exists
        run: |
          if [ ! -f "$APP_FILE" ]; then
            echo "ERROR: $APP_FILE not found in repo root"; exit 1;
          fi

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -V
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          # Pin PyInstaller la o versiune stabilă pentru PySide6 6.6.x
          pip install "pyinstaller==6.6.*"

      - name: Build .app with PyInstaller
        run: |
          set -eux
          # Colectăm toate hook-urile necesare pentru PySide6 + pandas + openpyxl
          pyinstaller --windowed --onefile --name "$APP_NAME" \
            --collect-all PySide6 \
            --collect-submodules pandas --collect-submodules openpyxl \
            "$APP_FILE"
          ls -la dist

      - name: Zip the .app (for download)
        run: |
          cd dist
          ditto -c -k --sequesterRsrc --keepParent "${APP_NAME}.app" "${APP_NAME}-macOS.zip"
          ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macOS
          path: dist/${{ env.APP_NAME }}-macOS.zip
